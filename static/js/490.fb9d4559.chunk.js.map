{"version":3,"file":"static/js/490.fb9d4559.chunk.js","mappings":"0KAIMA,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE7B,OADAC,QAAQC,IAAIC,4BAEV,kBAAMJ,SAAUA,EAAUK,aAAa,MAAvC,WACE,gBAAKC,UAAU,4BAAf,UACE,iBAAKA,UAAU,+BAAf,WACE,SAACC,EAAD,CAAOC,KAAK,OAAOC,GAAG,QAAQC,MAAM,2BACpC,SAACH,EAAD,CAAOC,KAAK,OAAOC,GAAG,OAAOC,MAAM,gCAGvC,mBACET,SAAUA,EACVK,UAAU,oCACVE,KAAK,SAHP,kCAWAD,EAAQ,SAAC,GAAD,IAAGE,EAAH,EAAGA,GAAID,EAAP,EAAOA,KAAME,EAAb,EAAaA,MAAb,OACZ,kBACEJ,UAAU,oBACVE,KAAMA,EACNC,GAAIA,EACJE,YAAaD,EACbL,aAAa,SAejB,EAXiB,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACE,iBAAKK,UAAU,kBAAf,WACE,gBAAKA,UAAS,qDACd,oBAASA,UAAS,kCAAlB,UACE,SAACP,EAAD,CAAWC,SAAUA,EAAUC,SAAUA,W,4LCtC3CW,EAAAA,WACJ,cAAe,eACbC,KAAKC,IAAMC,EAAAA,EAOb,OANC,oEAED,WAAUC,EAAKC,GAAf,+FACSJ,KAAKC,IAAII,IAAIF,EAAKC,IAD3B,qGAFC,IAED,2DAIA,WAAWD,EAAKG,EAAUF,GAA1B,+FACSJ,KAAKC,IAAIM,KAAKJ,EAAKG,EAAUF,IADtC,uGAJA,MAIA,EATIL,GCFOS,GDgBO,IAAIT,E,QChBA,CACtB,CACEU,MAAO,kBACPC,KAAM,SACNC,OAAQ,CACNC,MAAO,EACPC,cAAe,IAGnB,CACEJ,MAAO,eACPC,KAAM,SACNC,OAAQ,CACNC,MAAO,EACPC,cAAe,IAGnB,CACEJ,MAAO,oBACPC,KAAM,SACNC,OAAQ,CACNC,MAAO,EACPC,cAAe,M,SCyCrB,EA/Cc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAO9B,EAAP,KAAiB+B,EAAjB,KAEMC,EAAW,yCAAG,WAAOC,GAAP,gFAClBA,EAAMC,iBADY,EAEMD,EAAME,OAAOC,SAA7Bf,EAFU,EAEVA,MAAOC,EAFG,EAEHA,KACfrB,QAAQC,IAAImB,EAAMgB,MAAOf,EAAKe,OAoB9BT,GAASU,EAAAA,EAAAA,KAAW,IACpBP,GAAY,GACZQ,YAAW,WACTR,GAAY,GACZ,IAAMS,EAAapB,EAAUA,EAASqB,OAASC,KAAKC,SAAY,GAChEf,GAASgB,EAAAA,EAAAA,IAAQJ,IACjBZ,GAASU,EAAAA,EAAAA,KAAW,IACpBZ,EAASmB,EAAAA,GAAAA,QACR,KA/Be,2CAAH,sDAkCjB,OACE,gBAAKxC,UAAS,QAAd,UACE,SAACyC,EAAA,EAAD,CAAU/C,SAAUiC,EAAahC,SAAUA","sources":["components/LoginBox/LoginBox.jsx","services/httpRequest.js","mock.js","pages/Login/Login.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport './LoginBox.scss';\r\n\r\nconst LoginForm = ({ onSubmit, disabled }) => {\r\n  console.log(process.env.REACT_APP_API_ENDPOINT);\r\n  return (\r\n    <form onSubmit={onSubmit} autoComplete='off'>\r\n      <div className='form-block__input-wrapper'>\r\n        <div className='form-group form-group--login'>\r\n          <Input type='text' id='email' label='Email nhân viên' />\r\n          <Input type='text' id='code' label='Mã nhân viên' />\r\n        </div>\r\n      </div>\r\n      <button\r\n        disabled={disabled}\r\n        className='button button--primary full-width'\r\n        type='submit'\r\n      >\r\n        Vào chơi\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Input = ({ id, type, label }) => (\r\n  <input\r\n    className='form-group__input'\r\n    type={type}\r\n    id={id}\r\n    placeholder={label}\r\n    autoComplete='off'\r\n  />\r\n);\r\n\r\nconst LoginBox = ({ onSubmit, disabled }) => {\r\n  return (\r\n    <div className='login-container'>\r\n      <div className={`form-block-wrapper form-block-wrapper--is-login`}></div>\r\n      <section className={`form-block form-block--is-login`}>\r\n        <LoginForm onSubmit={onSubmit} disabled={disabled} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginBox;\r\n","import { axiosInstance } from \"./initRequest\";\r\n\r\nclass HTTPRequest {\r\n  constructor() {\r\n    this.api = axiosInstance;\r\n  }\r\n\r\n  async get(url, config) {\r\n    return this.api.get(url, config);\r\n  }\r\n\r\n  async post(url, bodyData, config) {\r\n    return this.api.post(url, bodyData, config);\r\n  }\r\n}\r\n\r\nconst httpRequest = new HTTPRequest();\r\n\r\nexport default httpRequest;\r\n","export const mockUser = [\r\n  {\r\n    email: 'nguyen.anh-quan',\r\n    code: 'E12345',\r\n    result: {\r\n      level: 0,\r\n      remainingTurn: 2,\r\n    },\r\n  },\r\n  {\r\n    email: 'do.hoang-duy',\r\n    code: 'E13345',\r\n    result: {\r\n      level: 0,\r\n      remainingTurn: 1,\r\n    },\r\n  },\r\n  {\r\n    email: 'truong.quoc-vuong',\r\n    code: 'E13345',\r\n    result: {\r\n      level: 0,\r\n      remainingTurn: 0,\r\n    },\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Configurations\r\nimport { PATH_NAME } from 'configurations';\r\n\r\nimport LoginBox from 'components/LoginBox/LoginBox';\r\n\r\nimport './Login.css';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLoading, setUser } from 'store/app/app.slice';\r\nimport { loginUser } from 'apis/user.api';\r\nimport authService from 'services/authService';\r\nimport { mockUser } from 'mock';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  const loginHandle = async (event) => {\r\n    event.preventDefault();\r\n    const { email, code } = event.target.elements;\r\n    console.log(email.value, code.value);\r\n\r\n    // try {\r\n    //   const bodyData = {\r\n    //     email: email.value,\r\n    //     code: code.value,\r\n    //   };\r\n    //   const res = await loginUser('/user/login', bodyData);\r\n    //   const userData = res.data;\r\n    //   authService.setUserAccess(userData);\r\n    //   dispatch(setUser(userData));\r\n    //   navigate(PATH_NAME.ROOT);\r\n    // } catch (err) {\r\n    //   // do something\r\n    //   const randomUser = mockUser[(mockUser.length * Math.random()) | 0];\r\n    //   dispatch(setUser(randomUser));\r\n    //   dispatch(setLoading(false));\r\n    //   navigate(PATH_NAME.ROOT);\r\n    // }\r\n\r\n    dispatch(setLoading(true));\r\n    setDisabled(true);\r\n    setTimeout(() => {\r\n      setDisabled(false);\r\n      const randomUser = mockUser[(mockUser.length * Math.random()) | 0];\r\n      dispatch(setUser(randomUser));\r\n      dispatch(setLoading(false));\r\n      navigate(PATH_NAME.ROOT);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className={`login`}>\r\n      <LoginBox onSubmit={loginHandle} disabled={disabled} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["LoginForm","onSubmit","disabled","console","log","process","autoComplete","className","Input","type","id","label","placeholder","HTTPRequest","this","api","axiosInstance","url","config","get","bodyData","post","mockUser","email","code","result","level","remainingTurn","navigate","useNavigate","dispatch","useDispatch","useState","setDisabled","loginHandle","event","preventDefault","target","elements","value","setLoading","setTimeout","randomUser","length","Math","random","setUser","PATH_NAME","LoginBox"],"sourceRoot":""}